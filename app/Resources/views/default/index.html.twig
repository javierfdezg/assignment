{% extends 'base.html.twig' %}

{% block body %}
  <div class="container">
    <div class="row header">
      <div class="col col-sm-2 text-center">
        Posts <span id="postsCount"></span> 
      </div>
      <div class="col col-sm-8 text-center">
        <a class="btn btn-default" href="#" role="button">Export</a>
      </div>
      <div class="col col-sm-2 text-center">
        Views <span id="viewsCount"></span>
      </div>
    </div>
    <div class="row poster">
      {{ form_start(form) }}
        {{ form_row(form.title) }}
        {{ form_row(form.file) }}
      {{ form_end(form) }}
    </div>
    <div class="row posts" id="posts-container">
      
    </div>
{% endblock %}

{% block custom_js %}
    <script src="http://autobahn.s3.amazonaws.com/js/autobahn.min.js"></script>
    <script>

      var errorHandler = function(error) {
        console.log(error);
      };

      var completeHandler = function(data) {
        $('form').each(function() {
            this.reset();
          });
      };

      $(':file').change(function(){
        var file = this.files[0];
        var name = file.name;
        var size = file.size;
        var type = file.type;
        
        var formData = new FormData($('form')[0]);
        $.ajax({
          url: '/posts', 
          type: 'POST',
          xhr: function() {  
              var myXhr = $.ajaxSettings.xhr();
              return myXhr;
          },
          success: completeHandler,
          error: errorHandler,
          data: formData,
          cache: false,
          contentType: false,
          processData: false
        });
      });

      var updateCount = function(type) {
        $.ajax({
          url: '/stats/' + type, 
          type: 'GET',
          xhr: function() {  
              var myXhr = $.ajaxSettings.xhr();
              return myXhr;
          },
          success: function (data) {
            if (type == 'posts') {
              $('#postsCount').html(data[type]);
            } else {
              $('#viewsCount').html(data[type]);
            }
          }
        });
      };

      var drawPost = function (post) {
        var $postRow = $('<div/>').addClass('row').addClass('post').attr('post-id', post.id);
        $postRow.append(post.id + ' ' + post.title);
        $('#posts-container').prepend($postRow.fadeIn());
      };

      var getPosts = function (lastId) {
        $.ajax({
          url: '/posts/from/' + lastId, 
          type: 'GET',
          dataType: 'json',
          xhr: function() {  
              var myXhr = $.ajaxSettings.xhr();
              return myXhr;
          },
          success: function (data) {
            for (var x = 0; x < data.length; x++) {
              drawPost(data[x]);  
            }
          }
        });
      };

      var getLastPostId = function () {
        var $lastIdElement = $('.row.post');
        var lastId = 0;
      
        if ($lastIdElement) {
          lastId = $lastIdElement.first().attr('post-id'); 
        }

        return lastId;
      };

      $(function() {
        updateCount('posts');  
        updateCount('views');  
        getPosts(getLastPostId());
      });

      var conn = new ab.Session('ws://localhost:8080',
        function() {
          conn.subscribe('posts', function(topic, data) {
            if (topic == 'posts') {
              updateCount(topic);  
              getPosts(getLastPostId());
            }
          });
          conn.subscribe('views', function(topic, data) {
            if (topic == 'views') {
              updateCount(topic);  
            }
          });
        },
        function() {
            console.warn('WebSocket connection closed');
        },
        {'skipSubprotocolCheck': true}
      );
    </script>
  </div>
{% endblock %}
