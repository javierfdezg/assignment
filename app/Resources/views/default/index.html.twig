{% extends 'base.html.twig' %}

{% block body %}
  <div class="container">
    <div class="row header">
      <div class="col col-sm-2 text-center">
        Posts <span id="postsCount"></span> 
      </div>
      <div class="col col-sm-8 text-center">
        <button id="exportButton" class="btn btn-default" role="button" data-toggle="modal" data-target="#modalExport">Export</button>
      </div>
      <div class="col col-sm-2 text-center">
        Views <span id="viewsCount"></span>
      </div>
    </div>
    <div class="row poster text-center">
      {{ form_start(form) }}
      <div clas="col col-sm-12 text-center">
        {{ form_row(form.title, { 'attr': {'class': "col col-sm-12 text-center", 'placeholder': 'Your image title'} }) }}
      </div>
      <div clas="col col-sm-12 text-center">
        {{ form_row(form.file, { 'attr': {'class': "col col-sm-12 text-center"} }) }}
      </div>
      {{ form_end(form) }}
    </div>
    <div class="row posts" id="posts-container">
      
    </div>

  <div class="modal fade" id="modalExport" tabindex="-1" role="dialog">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title">Generating export bundle...</h4>
        </div>
        <div class="modal-body">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
  </div><!-- /.modal -->
{% endblock %}

{% block custom_js %}
    <script src="http://autobahn.s3.amazonaws.com/js/autobahn.min.js"></script>
    <script>

      var errorHandler = function(error) {
        console.log(error);
      };

      var completeHandler = function(data) {
        $('form').each(function() {
            this.reset();
          });
      };

      $('#exportButton').click(function() {

        $('.modal-body').html('');

        var $p0 = $('<p/>').html('Your bundle is being generated. Please wait');
        $('.modal-body').append($p0);
        $.ajax({
          url: '/posts/export', 
          type: 'GET',
          xhr: function() {  
              var myXhr = $.ajaxSettings.xhr();
              return myXhr;
          },
          success: function (data, textStatus, xhr) {

            var $p1,$a;

            $('.modal-body').html('');
            if (xhr.status == 204) {
              $p1 = $('<p/>').html('There are no posts available. No bundle was generated');
              $('.modal-body')
                .append($p1)
            } else {
              $p1 = $('<p/>').html('Your bundle is ready for download. Here is the link:');
              $a = $('<a/>').attr('href', data.resource).text(data.resource);
              $('.modal-body')
                .append($p1)
                .append($a);
            }
          }

        });
      });

      $(':file').change(function(){
        var file = this.files[0];
        var name = file.name;
        var size = file.size;
        var type = file.type;
        
        var formData = new FormData($('form')[0]);
        $.ajax({
          url: '/posts', 
          type: 'POST',
          xhr: function() {  
              var myXhr = $.ajaxSettings.xhr();
              return myXhr;
          },
          success: completeHandler,
          error: errorHandler,
          data: formData,
          cache: false,
          contentType: false,
          processData: false
        });
      });

      var updateCount = function(type) {
        $.ajax({
          url: '/stats/' + type, 
          type: 'GET',
          xhr: function() {  
              var myXhr = $.ajaxSettings.xhr();
              return myXhr;
          },
          success: function (data) {
            if (type == 'posts') {
              $('#postsCount').html(data[type]);
            } else {
              $('#viewsCount').html(data[type]);
            }
          }
        });
      };

      var drawPost = function (post) {

        var $postRow = $('<div/>')
          .addClass('row')
          .addClass('post')
          .attr('post-id', post.id);

        var $postCol = $('<div/>')
          .addClass('col')
          .addClass('col-sm-12')
          .addClass('text-center');

        if (post.title !== undefined) {
          var $title = $('<p/>').addClass('title').append(post.title);
          $postCol.append($title);
        }

        var $link = $('<a/>')
          .attr('target', '_blank')
          .attr('href', post.image_url);

        var $img = $('<img/>')
          .addClass('img-thumbnail')
          .attr('alt', post.title)
          .attr('src', post.image_url);

        $link.append($img);
        $postCol.append($link);

        $postRow.append($postCol);

        $('#posts-container').prepend($postRow.fadeIn());
      };

      var getPosts = function (lastId) {
        $.ajax({
          url: '/posts/from/' + lastId, 
          type: 'GET',
          dataType: 'json',
          xhr: function() {  
              var myXhr = $.ajaxSettings.xhr();
              return myXhr;
          },
          success: function (data) {
            for (var x = 0; x < data.length; x++) {
              drawPost(data[x]);  
            }
          }
        });
      };

      var getLastPostId = function () {
        var $lastIdElement = $('.row.post');
        var lastId = 0;
      
        if ($lastIdElement) {
          lastId = $lastIdElement.first().attr('post-id'); 
        }

        return lastId;
      };

      $(function() {
        updateCount('posts');  
        updateCount('views');  
        getPosts(getLastPostId());
      });

      var conn = new ab.Session('ws://localhost:8080',
        function() {
          conn.subscribe('posts', function(topic, data) {
            if (topic == 'posts') {
              updateCount(topic);  
              getPosts(getLastPostId());
            }
          });
          conn.subscribe('views', function(topic, data) {
            if (topic == 'views') {
              updateCount(topic);  
            }
          });
        },
        function() {
            console.warn('WebSocket connection closed');
        },
        {'skipSubprotocolCheck': true}
      );
    </script>
  </div>
{% endblock %}

{% block stylesheets %}
<style>

  body {
    background-color: #e5e5e5;  
  }

  .container {
    width: 650px;
    margin: 20px auto;
    background-color: #fff; 
  }

  .row.header {
    padding-top: 20px;
    padding-bottom: 20px;  
  }

  .row.poster {
    margin: 50px 0px;
  }

  .posts {
    text-align: center;  
  }

  .row.post {
    margin: 20px 0px;  
  }

  .post > a > img {
    display: block;
    max-width:450px;
    margin: auto;
    max-height:250px;
    width: auto;
    height: auto;
  }

  .title {
    margin-top: 40px;  
  }
</style>
{% endblock %}
